function x(){}function w(t,n){for(const e in n)t[e]=n[e];return t}function v(t){return t()}function A(){return Object.create(null)}function E(t){t.forEach(v)}function B(t){return typeof t=="function"}function D(t,n){return t!=t?n==n:t!==n||t&&typeof t=="object"||typeof t=="function"}let a;function F(t,n){return t===n?!0:(a||(a=document.createElement("a")),a.href=n,t===a.href)}function M(t){return Object.keys(t).length===0}function b(t,...n){if(t==null){for(const o of n)o(void 0);return x}const e=t.subscribe(...n);return e.unsubscribe?()=>e.unsubscribe():e}function P(t){let n;return b(t,e=>n=e)(),n}function S(t,n,e){t.$$.on_destroy.push(b(n,e))}function U(t,n,e,o){if(t){const s=g(t,n,e,o);return t[0](s)}}function g(t,n,e,o){return t[1]&&o?w(e.ctx.slice(),t[1](o(n))):e.ctx}function C(t,n,e,o){return t[2],n.dirty}function G(t,n,e,o,s,y){if(s){const k=g(n,e,o,y);t.p(k,s)}}function H(t){if(t.ctx.length>32){const n=[],e=t.ctx.length/32;for(let o=0;o<e;o++)n[o]=-1;return n}return-1}let l;function i(t){l=t}function h(){if(!l)throw new Error("Function called outside component initialization");return l}function I(t){h().$$.on_mount.push(t)}function J(t){h().$$.after_update.push(t)}function K(t){h().$$.on_destroy.push(t)}const u=[],d=[];let r=[];const p=[],m=Promise.resolve();let _=!1;function j(){_||(_=!0,m.then(O))}function L(){return j(),m}function q(t){r.push(t)}const f=new Set;let c=0;function O(){if(c!==0)return;const t=l;do{try{for(;c<u.length;){const n=u[c];c++,i(n),z(n.$$)}}catch(n){throw u.length=0,c=0,n}for(i(null),u.length=0,c=0;d.length;)d.pop()();for(let n=0;n<r.length;n+=1){const e=r[n];f.has(e)||(f.add(e),e())}r.length=0}while(u.length);for(;p.length;)p.pop()();_=!1,f.clear(),i(t)}function z(t){if(t.fragment!==null){t.update(),E(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(q)}}function N(t){const n=[],e=[];r.forEach(o=>t.indexOf(o)===-1?n.push(o):e.push(o)),e.forEach(o=>o()),r=n}export{w as A,F as B,C as a,b,U as c,S as d,J as e,d as f,H as g,i as h,B as i,A as j,O as k,M as l,q as m,x as n,I as o,N as p,l as q,E as r,D as s,L as t,G as u,v,u as w,j as x,P as y,K as z};
